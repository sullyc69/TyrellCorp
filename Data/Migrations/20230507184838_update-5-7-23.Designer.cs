// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(TyrellCorporationContext))]
    [Migration("20230507184838_update-5-7-23")]
    partial class update5723
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Factory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Factories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Micro Gravity Assembly Plant",
                            Location = "Earth Orbit",
                            Name = "Earth Orbital Replicants"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Low Gravity Assembly Plant",
                            Location = "Titan",
                            Name = "Off World Replicants"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Full Gravity Assembly Plant",
                            Location = "Los Angeles, Earth",
                            Name = "LA Replicants"
                        });
                });

            modelBuilder.Entity("Data.Entities.Function", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Functionality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Functions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Functionality = "Pleasure"
                        },
                        new
                        {
                            Id = 2,
                            Functionality = "Military"
                        },
                        new
                        {
                            Id = 3,
                            Functionality = "Loader, (nuc)"
                        },
                        new
                        {
                            Id = 4,
                            Functionality = "Combat"
                        },
                        new
                        {
                            Id = 5,
                            Functionality = "Leisure"
                        },
                        new
                        {
                            Id = 6,
                            Functionality = "Assasination"
                        },
                        new
                        {
                            Id = 7,
                            Functionality = "Janitorial"
                        },
                        new
                        {
                            Id = 8,
                            Functionality = "Construction"
                        });
                });

            modelBuilder.Entity("Data.Entities.NexusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModelDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NexusModel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModelDescription = "Nexus 1"
                        },
                        new
                        {
                            Id = 2,
                            ModelDescription = "Nexus 2"
                        },
                        new
                        {
                            Id = 3,
                            ModelDescription = "Nexus 3"
                        },
                        new
                        {
                            Id = 4,
                            ModelDescription = "Nexus 4"
                        },
                        new
                        {
                            Id = 5,
                            ModelDescription = "Nexus 5"
                        },
                        new
                        {
                            Id = 6,
                            ModelDescription = "Nexus 6"
                        },
                        new
                        {
                            Id = 7,
                            ModelDescription = "Nexus 7"
                        },
                        new
                        {
                            Id = 8,
                            ModelDescription = "Nexus 8"
                        });
                });

            modelBuilder.Entity("Data.Entities.Replicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FactoryId")
                        .HasColumnType("int");

                    b.Property<string>("FunctionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InceptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MentalAbility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NexusModel")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalAbility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RetirementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.HasIndex("NexusModel");

                    b.ToTable("Replicants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FactoryId = 1,
                            InceptDate = new DateTime(1963, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MentalAbility = "Stupid",
                            Name = "Gilligan",
                            NexusModel = 1,
                            PhysicalAbility = "Weak",
                            Sex = "Male"
                        },
                        new
                        {
                            Id = 2,
                            FactoryId = 2,
                            InceptDate = new DateTime(1963, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MentalAbility = "Medium",
                            Name = "Ginger",
                            NexusModel = 2,
                            PhysicalAbility = "Weak",
                            Sex = "Female"
                        },
                        new
                        {
                            Id = 3,
                            FactoryId = 2,
                            InceptDate = new DateTime(1963, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MentalAbility = "Medium",
                            Name = "Captain",
                            NexusModel = 3,
                            PhysicalAbility = "Medium",
                            Sex = "Male"
                        });
                });

            modelBuilder.Entity("Data.Entities.Replicant", b =>
                {
                    b.HasOne("Data.Entities.Factory", "Factory")
                        .WithMany()
                        .HasForeignKey("FactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.NexusModel", "Nexus")
                        .WithMany()
                        .HasForeignKey("NexusModel");

                    b.Navigation("Factory");

                    b.Navigation("Nexus");
                });
#pragma warning restore 612, 618
        }
    }
}
